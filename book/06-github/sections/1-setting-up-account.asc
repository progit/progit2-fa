=== Account Setup and Configuration (ستاپ و کانفیگ کردن اکانت)

(((GitHub, user accounts)))
اولین کاری که باید انجام دهید، ایجاد یک حساب کاربری رایگان است.
کافی است به نشانی https://github.com[] بروید، یک نام کاربری که قبلاً انتخاب نشده باشد وارد کنید، یک آدرس ایمیل و رمز عبور مشخص کنید و روی دکمه‌ی سبز بزرگ «Sign up for GitHub» کلیک کنید.

.The GitHub sign-up form.
image::images/signup.png[The GitHub sign-up form.]

در مرحله‌ی بعد، صفحه‌ی قیمت‌گذاری پلن‌های ارتقاءیافته را مشاهده خواهید کرد، اما فعلاً می‌توانید با خیال راحت آن را نادیده بگیرید.
گیت‌هاب یک ایمیل برای تأیید آدرسی که وارد کرده‌اید برایتان ارسال می‌کند.
لطفاً این تأیید را انجام دهید؛ چون این مرحله اهمیت زیادی دارد (که در ادامه خواهیم دید).

[NOTE]
====
گیت‌هاب تقریباً تمام قابلیت‌های خود را به‌صورت رایگان در اختیار کاربران قرار می‌دهد، به‌جز برخی امکانات پیشرفته.
همچنین، مخازن خصوصی در حساب‌های رایگان به حداکثر ۳ همکار محدود می‌شوند.

پلن‌های پولی گیت‌هاب شامل ابزارها و ویژگی‌های پیشرفته، و همچنین افزایش محدودیت‌ها برای خدمات رایگان هستند، اما ما در این کتاب به آن‌ها نخواهیم پرداخت.
برای دریافت اطلاعات بیشتر درباره‌ی پلن‌های موجود و مقایسه‌ی آن‌ها، به آدرس https://github.com/pricing[] مراجعه کنید.
====

با کلیک روی لوگوی Octocat در بالای سمت چپ صفحه، به صفحه داشبورد خود منتقل می‌شوید.
حالا آماده‌اید تا از GitHub استفاده کنید.

==== SSH Access (دسترسی SSH)

(((SSH keys, with GitHub)))
در حال حاضر، شما کاملاً قادر هستید با استفاده از پروتکل `https://` به مخازن Git متصل شوید و با نام کاربری و گذرواژه‌ای که همین حالا تنظیم کرده‌اید، احراز هویت کنید.
اما برای کلون کردن پروژه‌های عمومی، حتی نیازی به ثبت‌نام هم ندارید — حساب کاربری که همین الان ساختیم زمانی به کار می‌آید که بعداً پروژه‌ها را فورک کنیم و تغییرات را به فورک‌های خود ارسال کنیم.

اگر می‌خواهید از اتصال‌های SSH استفاده کنید، باید یک کلید عمومی تنظیم کنید.
(اگر هنوز کلیدی ندارید، به بخش <<ch04-git-on-the-server#_generate_ssh_key>> مراجعه کنید.)
با استفاده از لینک بالای سمت راست پنجره، تنظیمات حساب خود را باز کنید:

.The ``Account settings'' link.
image::images/account-settings.png[The ``Account settings'' link.]

سپس بخش «SSH keys» را از سمت چپ صفحه انتخاب کنید.

.The ``SSH keys'' link.
image::images/ssh-keys.png[The ``SSH keys'' link.]

از آنجا، روی دکمه "`Add an SSH key`" کلیک کنید، یک نام برای کلید خود وارد کنید، محتوای فایل کلید عمومی `~/.ssh/id_rsa.pub` (یا هر اسمی که برای آن گذاشته‌اید) را در کادر متن قرار دهید و سپس روی «Add key» کلیک کنید.

[NOTE]
====
حتماً برای کلید SSH خود نامی انتخاب کنید که بتوانید به‌راحتی آن را به خاطر بسپارید.
می‌توانید برای هر یک از کلیدهای خود نامی اختصاص دهید (مثلاً "لپ‌تاپ من" یا "حساب کاری") تا اگر در آینده نیاز داشتید کلیدی را غیرفعال کنید، بتوانید به‌راحتی تشخیص دهید کدام کلید مربوط به کجاست.
====

[[_personal_avatar]]
==== Your Avatar (آواتار شما)

در مرحله بعد، اگر مایل باشید، می‌توانید تصویر آواتاری که به‌صورت خودکار برایتان ایجاد شده را با تصویری دلخواه جایگزین کنید.
ابتدا به تب «Profile» (بالای تب SSH Keys) بروید و روی گزینه «Upload new picture» کلیک کنید.

.The ``Profile'' link.
image::images/your-profile.png[The ``Profile'' link.]

ما یک نسخه از لوگوی Git را که روی هارد دیسک خود داریم انتخاب می‌کنیم و سپس این فرصت را خواهیم داشت که آن را برش (crop) دهیم.

.Crop your avatar
image::images/avatar-crop.png[Crop your uploaded avatar.]

اکنون در هر جایی از سایت که فعالیت داشته باشید، دیگران تصویر آواتار شما را در کنار نام کاربری‌تان خواهند دید.

اگر قبلاً در سرویس محبوب Gravatar (که اغلب برای حساب‌های Wordpress استفاده می‌شود) یک آواتار بارگذاری کرده‌اید، همان تصویر به‌صورت پیش‌فرض استفاده خواهد شد و نیازی به انجام این مرحله ندارید.

==== Your Email Addresses (آدرس ایمیل های  شما)

GitHub از طریق آدرس ایمیل، کامیت‌های Git شما را به حساب کاربری‌تان نسبت می‌دهد.
اگر در کامیت‌های خود از چندین آدرس ایمیل مختلف استفاده می‌کنید و می‌خواهید GitHub آن‌ها را به‌درستی به هم متصل کند، باید تمام آدرس‌های ایمیلی را که استفاده کرده‌اید، در بخش Emails از قسمت تنظیمات حساب (admin section) اضافه کنید.

[[_add_email_addresses]]
.Add email addresses
image::images/email-settings.png[Add all your email addresses.]

در بخش <<_add_email_addresses>> می‌توانیم برخی از حالت‌های مختلف مربوط به آدرس‌های ایمیل را ببینیم:

آدرس بالایی، تأیید شده و به‌عنوان آدرس اصلی (Primary) تنظیم شده است؛ یعنی اعلان‌ها و رسیدها به این آدرس ارسال می‌شوند.
آدرس دوم نیز تأیید شده و در صورت تمایل می‌توانید آن را به‌عنوان آدرس اصلی انتخاب کنید.
آدرس آخر تأیید نشده است، بنابراین نمی‌توانید آن را به‌عنوان آدرس اصلی تنظیم کنید.

اگر GitHub یکی از این آدرس‌ها را در پیام‌های کامیت در هر مخزنی در سایت مشاهده کند، آن را به حساب کاربری شما لینک خواهد کرد.

==== Two Factor Authentication (تایید دو مرحله ای)

در نهایت، برای افزایش امنیت، حتماً باید احراز هویت دو مرحله‌ای یا همان «2FA» را فعال کنید.
احراز هویت دو مرحله‌ای یک مکانیزم امنیتی است که این روزها بسیار رایج شده و به کاهش ریسک دسترسی غیرمجاز به حساب شما در صورت دزدیده شدن رمز عبور کمک می‌کند.
با فعال کردن این قابلیت، GitHub هنگام ورود از شما دو روش مختلف برای احراز هویت درخواست می‌کند، بنابراین اگر یکی از آن‌ها به خطر بیفتد، مهاجم همچنان نمی‌تواند به حساب شما دسترسی پیدا کند.

برای تنظیم احراز هویت دو مرحله‌ای، به تب «Security» در بخش تنظیمات حساب کاربری خود بروید.

.2FA in the Security Tab
image::images/2fa-1.png[2FA in the Security Tab]

اگر روی دکمه «Set up two-factor authentication» کلیک کنید، به صفحه‌ای هدایت می‌شوید که در آن می‌توانید روش دلخواه خود را برای دریافت کد دومرحله‌ای انتخاب کنید:
یا از یک اپلیکیشن موبایل برای تولید کد ثانویه استفاده کنید (کدی یک‌بارمصرف و مبتنی بر زمان)،
یا این‌که GitHub هر بار هنگام ورود، یک کد از طریق پیامک (SMS) برایتان ارسال کند.

پس از انتخاب روش مورد نظر و انجام مراحل راه‌اندازی 2FA طبق دستورالعمل‌ها، حساب شما کمی امن‌تر خواهد شد و از این پس باید هنگام ورود به GitHub، علاوه بر رمز عبور، آن کد امنیتی را نیز وارد کنید.