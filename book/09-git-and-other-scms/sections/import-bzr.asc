==== Bazaar بازار
(((Bazaar)))(((Importing, from Bazaar)))

Bazaar یک ابزار کنترل نسخه توزیع‌شده (DVCS) شبیه به Git است، و در نتیجه تبدیل یک مخزن Bazaar به یک مخزن Git نسبتاً ساده است.
برای انجام این کار، باید افزونه `bzr-fastimport` را وارد (import) کنید.

===== دریافت افزونه bzr-fastimport

فرآیند نصب افزونه fastimport در سیستم‌عامل‌های شبه یونیکس و ویندوز متفاوت است.
در سیستم‌عامل‌های شبه یونیکس، ساده‌ترین روش نصب پکیج bzr-fastimport است که تمامی وابستگی‌های مورد نیاز را نیز نصب خواهد کرد.

برای مثال، در Debian و توزیع‌های مشتق‌شده از آن، می‌توانید این کار را به شکل زیر انجام دهید:

[source,console]
----
$ sudo apt-get install bzr-fastimport
----

با RHEL، شما باید به صورت زیر عمل کنید:

[source,console]
----
$ sudo yum install bzr-fastimport
----

در Fedora، از نسخه ۲۲ به بعد، مدیر بسته جدید dnf است:

[source,console]
----
$ sudo dnf install bzr-fastimport
----

اگر این پکیج در دسترس نباشد، می‌توانید آن را به صورت یک افزونه (plugin) نصب کنید:

[source,console]
----
$ mkdir --parents ~/.bazaar/plugins     # ایجاد پوشه‌های لازم برای پلاگین‌ها
$ cd ~/.bazaar/plugins
$ bzr branch lp:bzr-fastimport fastimport   # وارد کردن پلاگین fastimport
$ cd fastimport
$ sudo python setup.py install --record=files.txt   # نصب پلاگین
----

برای اینکه این پلاگین کار کند، شما همچنین به ماژول پایتون `fastimport` نیاز دارید.
          می‌توانید بررسی کنید که آیا موجود است یا نه و با دستورات زیر آن را نصب کنید:

[source,console]
----
$ python -c "import fastimport"
Traceback (most recent call last):
  File "<string>", line 1, in <module>
ImportError: No module named fastimport
$ pip install fastimport
----
اگر در دسترس نیست، می‌توانید آن را از آدرس https://pypi.python.org/pypi/fastimport/.

در حالت دوم (در ویندوز)، افزونه bzr-fastimport به‌صورت خودکار همراه با نسخه مستقل (standalone) و نصب پیش‌فرض (در صورتی که تمام چک‌باکس‌ها تیک‌خورده باقی بمانند) نصب می‌شود.
بنابراین در این حالت، نیازی به انجام کار خاصی ندارید.

در این مرحله، روش وارد کردن یک مخزن Bazaar بسته به این که فقط یک شاخه داشته باشید یا با مخزنی با چندین شاخه کار می‌کنید، متفاوت است.

===== Project with a single branch (پروژه با یک شاخه واحد)

اکنون `cd` در دایرکتوری که مخزن بازار شما در آن قرار دارد و مخزن گیت را راه‌اندازی کنید:

[source,console]
----
$ cd /path/to/the/bzr/repository
$ git init
----

اکنون، می‌توانید به سادگی مخزن بازار خود را صادر کرده و آن را به یک مخزن گیت تبدیل کنید با استفاده از دستور
          زیر:

[source,console]
----
$ bzr fast-export --plain . | git fast-import
----

بسته به اندازه پروژه، مخزن Git شما در بازه‌ای از چند ثانیه تا چند دقیقه ساخته می‌شود.

===== Case of a project with a main branch and a working branch (حالت پروژه‌ای با یک شاخه اصلی و یک شاخه کاری)
        
شما می‌توانید یک مخزن Bazaar را که شامل چند شاخه است نیز وارد (import) کنید.
فرض کنیم که دو شاخه دارید: یکی شاخه اصلی را نمایش می‌دهد (myProject.trunk) و دیگری شاخه کاری است (myProject.work).

[source,console]
----
$ ls
myProject.trunk myProject.work
----

مخزن گیت را ایجاد کنید و با دستور `cd` به آن بروید:

[source,console]
----
$ git init git-repo
$ cd git-repo
----

شاخه `master` را به گیت بکشید:

[source,console]
----
$ bzr fast-export --export-marks=../marks.bzr ../myProject.trunk | \
git fast-import --export-marks=../marks.git
----

شاخه کاری را به گیت بکشید:

[source,console]
----
$ bzr fast-export --marks=../marks.bzr --git-branch=work ../myProject.work | \
git fast-import --import-marks=../marks.git --export-marks=../marks.git
----

اکنون دستور git branch شاخه master و همچنین شاخه work را به شما نشان می‌دهد.
لاگ‌ها (logs) را بررسی کنید تا مطمئن شوید همه چیز به‌طور کامل منتقل شده، و سپس فایل‌های marks.bzr و marks.git را حذف کنید.

===== Synchronizing the staging area (همگام‌سازی ناحیه موقت)

فارغ از تعداد شاخه‌هایی که داشتید و روشی که برای وارد کردن آن‌ها استفاده کردید، ناحیه staging شما با `HEAD` همگام نیست، و در صورت وارد کردن چند شاخه، دایرکتوری کاری شما نیز همگام نخواهد بود.
این وضعیت به‌سادگی با اجرای دستور زیر حل می‌شود:

[source,console]
----
$ git reset --hard HEAD
----

=====  نادیده گرفتن فایل‌هایی که با .bzrignore نادیده گرفته شده بودند
        
حالا بیایید نگاهی به فایل‌های نادیده گرفته شده بیندازیم.
اولین کاری که باید انجام دهید این است که فایل .bzrignore را به .gitignore تغییر نام دهید.

اگر فایل .bzrignore شامل یک یا چند خط باشد که با "!!" یا "RE:" شروع می‌شوند، باید آن را ویرایش کرده و شاید نیاز باشد چند فایل .gitignore جداگانه بسازید تا دقیقاً همان فایل‌هایی را نادیده بگیرید که قبلاً توسط Bazaar نادیده گرفته می‌شدند.

در نهایت، باید یک کامیت ایجاد کنید که این تغییرات را برای ثبت فرآیند مهاجرت شامل شود:

[source,console]
----
$ git mv .bzrignore .gitignore
$ # modify .gitignore if needed
$ git commit -am 'Migration from Bazaar to Git'
----

===== Sending your repository to the server (ارسال مخزن شما به سرور)

الان آماده‌ایم!
حالا می‌توانید مخزن را به سرور جدید خانه خود ارسال کنید:

[source,console]
----
$ git remote add origin git@my-git-server:mygitrepository.git
$ git push origin --all
$ git push origin --tags
----

مخزن گیت شما آماده استفاده است.
