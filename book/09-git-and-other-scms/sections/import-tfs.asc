[[_git_tfs]]
==== TFS

(((TFS)))(((Importing, from TFS)))
اگر تیم شما در حال تبدیل کنترل منبع خود از TFVC به گیت است، شما می‌خواهید بالاترین دقت ممکن را در تبدیل داشته
        باشید.
        این بدان معناست که، در حالی که ما هر دو git-tfs و git-tf را برای بخش تعامل پوشش داده‌ایم، ما فقط به git-tfs برای
        این بخش خواهیم پرداخت، زیرا git-tfs از شاخه‌ها پشتیبانی می‌کند و این کار با استفاده از git-tf به شدت دشوار
        است.

[NOTE]
====
این یک تبدیل یک‌طرفه است.
                مخزن گیت حاصل نمی‌تواند با پروژه اصلی TFVC متصل شود.
====

اولین کاری که باید انجام دهید نگاشت نام‌های کاربری است.
        TFVC نسبت به آنچه که در فیلد نویسنده برای تغییرات قرار می‌دهد، نسبتاً آزاد است، اما گیت به یک نام و آدرس ایمیل
        قابل خواندن برای انسان نیاز دارد.
        شما می‌توانید این اطلاعات را از کلاینت خط فرمان `tf` به این صورت دریافت کنید:

[source,powershell]
----
PS> tf history $/myproject -recursive > AUTHORS_TMP
----

این تمام تغییرات در تاریخچه پروژه را می‌گیرد و در فایل AUTHORS_TMP قرار می‌دهد که ما آن را پردازش خواهیم کرد تا
        داده‌های ستون _User_ (دومین) را استخراج کنیم.
        فایل را باز کنید و ببینید که کدام کاراکترها شروع و پایان ستون هستند و در دستور زیر، پارامترهای
        `11-20` دستور `cut` را با آن‌ها جایگزین کنید:

[source,powershell]
----
PS> cat AUTHORS_TMP | cut -b 11-20 | tail -n+3 | sort | uniq > AUTHORS
----

دستور `cut` فقط کاراکترهای بین 11 و 20 را از هر خط نگه می‌دارد.
        دستور `tail` دو خط اول را که سرصفحه‌های فیلد و زیرنویس‌های ASCII هستند، نادیده می‌گیرد.
        نتیجه همه این‌ها به `sort` و `uniq` ارسال می‌شود تا تکراری‌ها حذف شوند و در فایلی به نام
        `AUTHORS` ذخیره شود.
        مرحله بعدی دستی است؛ برای اینکه git-tfs به طور مؤثر از این فایل استفاده کند، هر خط باید به این فرمت باشد:

[source,text]
----
DOMAIN\username = User Name <email@address.com>
----

بخش سمت چپ فیلد "User" از TFVC است و بخش سمت راست علامت مساوی نام کاربری است که برای کامیت‌های گیت استفاده
        خواهد شد.

پس از اینکه این فایل را دارید، کار بعدی این است که یک کلون کامل از پروژه TFVC که به آن علاقه دارید، ایجاد
        کنید:

[source,powershell]
----
PS> git tfs clone --with-branches --authors=AUTHORS https://username.visualstudio.com/DefaultCollection $/project/Trunk project_git
----

سپس می‌خواهید بخش‌های `git-tfs-id` را از انتهای پیام‌های کامیت پاک کنید.
        دستور زیر این کار را انجام می‌دهد:

[source,powershell]
----
PS> git filter-branch -f --msg-filter 'sed "s/^git-tfs-id:.*$//g"' '--' --all
----

این از دستور `sed` در محیط Git-bash استفاده می‌کند تا هر خطی که با "git-tfs-id:" شروع می‌شود را با
        خالی جایگزین کند، که گیت سپس آن را نادیده می‌گیرد.

پس از اینکه همه این کارها انجام شد، شما آماده‌اید که یک ریموت جدید اضافه کنید، تمام شاخه‌های خود را فشار دهید و
        تیم خود را از گیت شروع به کار کنید.
